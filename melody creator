const int trig_pin = 15 ;
const int echo_pin = 14;
const int buzzer = 6;
const int LED_R=7;
const int LED_G=10;
const int LED_B=11;
int melody[]={262, 294,339,349,392,440,494,523};

#include <Wire.h>
#include<Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);




#define SOUND_SPEED 340
#define TRIG_PULSE_DURATION_US 10

long ultrason_duration;
float distance_cm;

void setup() {
  Serial.begin(115200);
  pinMode(trig_pin, OUTPUT);
  pinMode(echo_pin, INPUT);
  pinMode(buzzer, OUTPUT);
  pinMode(LED_R, OUTPUT);
  pinMode(LED_G, OUTPUT);
  pinMode(LED_B, OUTPUT);

   Wire.setSDA(12);
  Wire.setSCL(13);
  Wire.begin();
  Serial.begin(115200);

  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3c)){
  Serial.println(F("SSD1306 allocation failed"));
  for(;;);
  }


}

void loop() {
  digitalWrite(trig_pin, LOW);
  delayMicroseconds(2);

  digitalWrite(trig_pin, HIGH);
  delayMicroseconds(TRIG_PULSE_DURATION_US);
  digitalWrite(trig_pin, LOW);

  ultrason_duration = pulseIn(echo_pin, HIGH);

  distance_cm = ultrason_duration * SOUND_SPEED/2 * 0.0001;

  Serial.print("Distance (cm): ");
  Serial.println(distance_cm);

  delay(250);

  if(distance_cm<3){
    tone(buzzer, melody[0]);
    digitalWrite(LED_R, 0);
    digitalWrite(LED_G, 1);
    digitalWrite(LED_B, 1);
    
  display.clearDisplay();
  display.setTextSize(5);
  display.setTextColor(WHITE);
  display.setCursor(32,16);
  display.println("DO");
  display.display();
  

  }
  else if(distance_cm<4){
    tone(buzzer, melody[1]);
    digitalWrite(LED_R, 1);
    digitalWrite(LED_G, 0);
    digitalWrite(LED_B, 1);
    display.clearDisplay();
  display.setTextSize(5);
  display.setTextColor(WHITE);
  display.setCursor(32,16);
  display.println("Re");
  display.display();
  
  }
  else if(distance_cm<6){
    tone(buzzer, melody[2]);
    digitalWrite(LED_R, 1);
    digitalWrite(LED_G, 1);
    digitalWrite(LED_B, 0);
    display.clearDisplay();
  display.setTextSize(5);
  display.setTextColor(WHITE);
  display.setCursor(32,16);
  display.println("Mi");
  display.display();
  
  }
  else if(distance_cm<8){
    tone(buzzer, melody[3]);
    digitalWrite(LED_R, 0);
    digitalWrite(LED_G, 0);
    digitalWrite(LED_B, 1);
    display.clearDisplay();
  display.setTextSize(5);
  display.setTextColor(WHITE);
  display.setCursor(32,16);
  display.println("Fa");
  display.display();
  
  }
  else if(distance_cm<10){
    tone(buzzer, melody[4]);
    digitalWrite(LED_R, 0);
    digitalWrite(LED_G, 1);
    digitalWrite(LED_B, 0);
    display.clearDisplay();
  display.setTextSize(5);
  display.setTextColor(WHITE);
  display.setCursor(32,16);
  display.println("So");
  display.display();
  
  }
  else if(distance_cm<12){
    tone(buzzer, melody[5]);
    digitalWrite(LED_R, 1);
    digitalWrite(LED_G, 0);
    digitalWrite(LED_B, 0);display.clearDisplay();
  display.setTextSize(5);
  display.setTextColor(WHITE);
  display.setCursor(32,16);
  display.println("La");
  display.display();
 

  }
  else if(distance_cm<14){
    tone(buzzer, melody[6]);
    digitalWrite(LED_R, 0);
    digitalWrite(LED_G, 0);
    digitalWrite(LED_B, 0);
    display.clearDisplay();
  display.setTextSize(5);
  display.setTextColor(WHITE);
  display.setCursor(32,16);
  display.println("Ti");
  display.display();
  
  }
  else if(distance_cm<16){
    tone(buzzer, melody[7]);
    digitalWrite(LED_R, 1);
    digitalWrite(LED_G, 1);
    digitalWrite(LED_B, 1);
    display.clearDisplay();
  display.setTextSize(5);
  display.setTextColor(WHITE);
  display.setCursor(32,16);
  display.println("DO");
  display.display();
  
  }
  else{
    noTone(buzzer);
    display.clearDisplay();
  display.setTextSize(5);
  display.setTextColor(WHITE);
  display.setCursor(32,16);
  display.println(" ");
  display.display();
  
  }

}
